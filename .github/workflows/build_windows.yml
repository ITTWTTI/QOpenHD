name: Windows

on:
  push:
   branches:
      - "windows-ci"

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: [Debug, Release]

    defaults:
      run:
        shell: cmd 

    env:
      QT_VERSION: 5.15.2
      GST_VERSION: 1.22.11
      ARTIFACT: QGroundControl-Installer.exe

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - uses: msys2/setup-msys2@v2
        with:
            msystem: mingw32
            release: false

      - name: Install Gstreamer
        uses: blinemedical/setup-gstreamer@v1
        with:
          version: ${{ env.GST_VERSION }}
        # run: choco install --no-progress gstreamer gstreamer-devel --version=1.22.8

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: windows
          target: desktop
          arch: win32_mingw81
          dir: ${{ runner.temp }}
          modules: qtcharts
          setup-python: true

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1.6.0
        with:
          url:    http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        working-directory: ${{ runner.temp }}
        run:  |
              7z x jom.zip -ojom

      - name: Configure
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake -S ${{ github.workspace }} -B . -G Ninja ^
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} ^
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run:  |
              qmake -r ${{ env.SOURCE_DIR }}\QOpenHD.pro
              ${{ runner.temp }}\jom\jom -j2

      - name: Install
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake --install . --config ${{ matrix.BuildType }}