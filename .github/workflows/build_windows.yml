name: Windows

on:
  push:
   branches:
      - "windows-ci"

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        BuildType: [Debug, Release]

    defaults:
      run:
        shell: cmd

    env:
      QT_VERSION: 6.6.3
      GST_VERSION: 1.22.11
      ARTIFACT: QGroundControl-Installer.exe

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-tags: true

      - name: Install Dependencies
        run: |
          choco install --no-progress sccache ninja -y
          choco install --no-progress cmake --installargs 'ADD_CMAKE_TO_PATH=System' --apply-install-arguments-to-dependencies

      - name: Install Gstreamer
        uses: blinemedical/setup-gstreamer@v1
        with:
          version: ${{ env.GST_VERSION }}
        # run: choco install --no-progress gstreamer gstreamer-devel --version=1.22.8

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          aqtversion: ==3.1.*
          host: windows
          target: desktop
          arch: win64_mingw
          dir: ${{ runner.temp }}
          modules: qtcharts qtlocation qtpositioning qtspeech qt5compat qtmultimedia qtserialport qtimageformats qtshadertools qtconnectivity qtquick3d
          setup-python: true
          cache: ${{ github.ref == 'refs/heads/master' && github.event_name != 'pull_request' }}
          tools: 'tools_cmake'

      - name: Set up Visual Studio shell
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\shadow_build_dir

      - name: Configure
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake -S ${{ github.workspace }} -B . -G Ninja ^
              -DCMAKE_BUILD_TYPE=${{ matrix.BuildType }} ^
              -DQGC_STABLE_BUILD=${{ github.ref_type == 'tag' || contains(github.ref, 'Stable') && 'ON' || 'OFF' }}

      - name: Build
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake --build . --target all --config ${{ matrix.BuildType }}

      - name: Install
        working-directory: ${{ runner.temp }}\shadow_build_dir
        run: cmake --install . --config ${{ matrix.BuildType }}